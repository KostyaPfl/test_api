{"uid":"1334ec3409ebab5c","name":"Проверяем что код ответа при попытке полностью обновить несуществующий пост = 404","fullName":"test_api.TestUpdatePost#test_full_data_update_non_existent_post_status_code","historyId":"090f0480b59ba6353a31f5f15e398176","time":{"start":1741712914452,"stop":1741712915018,"duration":566},"status":"failed","statusMessage":"AssertionError: Expected status code 404, but got 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <test_api.TestUpdatePost object at 0x0000022B3A1ABDD0>\n\n    @allure.title('Проверяем что код ответа при попытке полностью обновить несуществующий пост = 404')\n    def test_full_data_update_non_existent_post_status_code(self):\n        response_get_posts = requests.get(f\"{BASE_URL}\")\n        last_post_id = response_get_posts.json()[-1][\"id\"]\n        non_existent_id = last_post_id + 1\n        updated_post = {\n            \"id\": last_post_id,\n            \"title\": \"Updated Title\",\n            \"body\": \"Updated body text.\",\n            \"userId\": 1\n        }\n        response = requests.put(f\"{BASE_URL}/{non_existent_id}\", json=updated_post)\n>       assert response.status_code == 404, f\"Expected status code 404, but got {response.status_code}\"\nE       AssertionError: Expected status code 404, but got 500\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\ntest_api.py:124: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestUpdatePost"},{"name":"host","value":"DESKTOP-4B15D1P"},{"name":"thread","value":"12136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1334ec3409ebab5c.json","parameterValues":[]}