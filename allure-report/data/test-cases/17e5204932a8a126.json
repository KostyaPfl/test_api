{"uid":"17e5204932a8a126","name":"Проверяем что код ответа при удалении несуществующего поста = 404","fullName":"test_api.TestDeletePost#test_delete_non_existent_post_status_code","historyId":"8095ed614d42b2b17933b66c610e1877","time":{"start":1741712919653,"stop":1741712920199,"duration":546},"status":"failed","statusMessage":"AssertionError: Expected status code 404, but got 200\nassert 200 == 404\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_api.TestDeletePost object at 0x0000022B3A1E8890>\n\n    @allure.title('Проверяем что код ответа при удалении несуществующего поста = 404')\n    def test_delete_non_existent_post_status_code(self):\n        response_get_posts = requests.get(f\"{BASE_URL}\")\n        last_post_id = response_get_posts.json()[-1][\"id\"]\n        non_existent_id = last_post_id + 1\n        response = requests.delete(f\"{BASE_URL}/{non_existent_id}\")\n>       assert response.status_code == 404, f\"Expected status code 404, but got {response.status_code}\"\nE       AssertionError: Expected status code 404, but got 200\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntest_api.py:171: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestDeletePost"},{"name":"host","value":"DESKTOP-4B15D1P"},{"name":"thread","value":"12136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"17e5204932a8a126.json","parameterValues":[]}