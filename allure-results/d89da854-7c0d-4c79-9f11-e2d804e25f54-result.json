{"name": "Проверяем что код ответа при попытке обновить поле в несуществующем посте = 404", "status": "failed", "statusDetails": {"message": "AssertionError: Expected status code 404, but got 200\nassert 200 == 404\n +  where 200 = <Response [200]>.status_code", "trace": "self = <test_api.TestUpdatePost object at 0x0000022B3A1E8560>\n\n    @allure.title('Проверяем что код ответа при попытке обновить поле в несуществующем посте = 404')\n    def test_partial_data_update_non_existent_post_status_code(self):\n        response_get_posts = requests.get(f\"{BASE_URL}\")\n        last_post_id = response_get_posts.json()[-1][\"id\"]\n        non_existent_id = last_post_id + 1\n        updated_field = {\"title\": \"Updated Title\"}\n        response = requests.patch(f\"{BASE_URL}/{non_existent_id}\", json=updated_field)\n>       assert response.status_code == 404, f\"Expected status code 404, but got {response.status_code}\"\nE       AssertionError: Expected status code 404, but got 200\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntest_api.py:156: AssertionError"}, "start": 1741712917628, "stop": 1741712918393, "uuid": "64e66677-24b9-483a-83f3-4b6a5b4e60a1", "historyId": "525835dc345ca56f89235978765ce3d9", "testCaseId": "525835dc345ca56f89235978765ce3d9", "fullName": "test_api.TestUpdatePost#test_partial_data_update_non_existent_post_status_code", "labels": [{"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestUpdatePost"}, {"name": "host", "value": "DESKTOP-4B15D1P"}, {"name": "thread", "value": "12136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}